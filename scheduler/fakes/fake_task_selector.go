// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/glestaris/ice-clique/scheduler"
)

type FakeTaskSelector struct {
	SelectTaskStub        func([]scheduler.Task) scheduler.Task
	selectTaskMutex       sync.RWMutex
	selectTaskArgsForCall []struct {
		arg1 []scheduler.Task
	}
	selectTaskReturns struct {
		result1 scheduler.Task
	}
}

func (fake *FakeTaskSelector) SelectTask(arg1 []scheduler.Task) scheduler.Task {
	fake.selectTaskMutex.Lock()
	fake.selectTaskArgsForCall = append(fake.selectTaskArgsForCall, struct {
		arg1 []scheduler.Task
	}{arg1})
	fake.selectTaskMutex.Unlock()
	if fake.SelectTaskStub != nil {
		return fake.SelectTaskStub(arg1)
	} else {
		return fake.selectTaskReturns.result1
	}
}

func (fake *FakeTaskSelector) SelectTaskCallCount() int {
	fake.selectTaskMutex.RLock()
	defer fake.selectTaskMutex.RUnlock()
	return len(fake.selectTaskArgsForCall)
}

func (fake *FakeTaskSelector) SelectTaskArgsForCall(i int) []scheduler.Task {
	fake.selectTaskMutex.RLock()
	defer fake.selectTaskMutex.RUnlock()
	return fake.selectTaskArgsForCall[i].arg1
}

func (fake *FakeTaskSelector) SelectTaskReturns(result1 scheduler.Task) {
	fake.SelectTaskStub = nil
	fake.selectTaskReturns = struct {
		result1 scheduler.Task
	}{result1}
}

var _ scheduler.TaskSelector = new(FakeTaskSelector)
