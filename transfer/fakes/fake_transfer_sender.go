// This file was generated by counterfeiter
package fakes

import (
	"io"
	"sync"

	"github.com/ice-stuff/clique/transfer"
)

type FakeTransferSender struct {
	SendTransferStub        func(spec transfer.TransferSpec, conn io.ReadWriter) (transfer.TransferResults, error)
	sendTransferMutex       sync.RWMutex
	sendTransferArgsForCall []struct {
		spec transfer.TransferSpec
		conn io.ReadWriter
	}
	sendTransferReturns struct {
		result1 transfer.TransferResults
		result2 error
	}
}

func (fake *FakeTransferSender) SendTransfer(spec transfer.TransferSpec, conn io.ReadWriter) (transfer.TransferResults, error) {
	fake.sendTransferMutex.Lock()
	fake.sendTransferArgsForCall = append(fake.sendTransferArgsForCall, struct {
		spec transfer.TransferSpec
		conn io.ReadWriter
	}{spec, conn})
	fake.sendTransferMutex.Unlock()
	if fake.SendTransferStub != nil {
		return fake.SendTransferStub(spec, conn)
	} else {
		return fake.sendTransferReturns.result1, fake.sendTransferReturns.result2
	}
}

func (fake *FakeTransferSender) SendTransferCallCount() int {
	fake.sendTransferMutex.RLock()
	defer fake.sendTransferMutex.RUnlock()
	return len(fake.sendTransferArgsForCall)
}

func (fake *FakeTransferSender) SendTransferArgsForCall(i int) (transfer.TransferSpec, io.ReadWriter) {
	fake.sendTransferMutex.RLock()
	defer fake.sendTransferMutex.RUnlock()
	return fake.sendTransferArgsForCall[i].spec, fake.sendTransferArgsForCall[i].conn
}

func (fake *FakeTransferSender) SendTransferReturns(result1 transfer.TransferResults, result2 error) {
	fake.SendTransferStub = nil
	fake.sendTransferReturns = struct {
		result1 transfer.TransferResults
		result2 error
	}{result1, result2}
}

var _ transfer.TransferSender = new(FakeTransferSender)
