// This file was generated by counterfeiter
package fakes

import (
	"net"
	"sync"

	"github.com/ice-stuff/clique/transfer"
)

type FakeConnector struct {
	ConnectStub        func(ip net.IP, port uint16) (net.Conn, error)
	connectMutex       sync.RWMutex
	connectArgsForCall []struct {
		ip   net.IP
		port uint16
	}
	connectReturns struct {
		result1 net.Conn
		result2 error
	}
}

func (fake *FakeConnector) Connect(ip net.IP, port uint16) (net.Conn, error) {
	fake.connectMutex.Lock()
	fake.connectArgsForCall = append(fake.connectArgsForCall, struct {
		ip   net.IP
		port uint16
	}{ip, port})
	fake.connectMutex.Unlock()
	if fake.ConnectStub != nil {
		return fake.ConnectStub(ip, port)
	} else {
		return fake.connectReturns.result1, fake.connectReturns.result2
	}
}

func (fake *FakeConnector) ConnectCallCount() int {
	fake.connectMutex.RLock()
	defer fake.connectMutex.RUnlock()
	return len(fake.connectArgsForCall)
}

func (fake *FakeConnector) ConnectArgsForCall(i int) (net.IP, uint16) {
	fake.connectMutex.RLock()
	defer fake.connectMutex.RUnlock()
	return fake.connectArgsForCall[i].ip, fake.connectArgsForCall[i].port
}

func (fake *FakeConnector) ConnectReturns(result1 net.Conn, result2 error) {
	fake.ConnectStub = nil
	fake.connectReturns = struct {
		result1 net.Conn
		result2 error
	}{result1, result2}
}

var _ transfer.Connector = new(FakeConnector)
