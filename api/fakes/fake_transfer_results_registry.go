// This file was generated by counterfeiter
package fakes

import (
	"net"
	"sync"

	"github.com/glestaris/ice-clique/api"
)

type FakeTransferResultsRegistry struct {
	TransfersStub        func() []api.TransferResults
	transfersMutex       sync.RWMutex
	transfersArgsForCall []struct{}
	transfersReturns     struct {
		result1 []api.TransferResults
	}
	TransfersByIPStub        func(net.IP) []api.TransferResults
	transfersByIPMutex       sync.RWMutex
	transfersByIPArgsForCall []struct {
		arg1 net.IP
	}
	transfersByIPReturns struct {
		result1 []api.TransferResults
	}
}

func (fake *FakeTransferResultsRegistry) Transfers() []api.TransferResults {
	fake.transfersMutex.Lock()
	fake.transfersArgsForCall = append(fake.transfersArgsForCall, struct{}{})
	fake.transfersMutex.Unlock()
	if fake.TransfersStub != nil {
		return fake.TransfersStub()
	} else {
		return fake.transfersReturns.result1
	}
}

func (fake *FakeTransferResultsRegistry) TransfersCallCount() int {
	fake.transfersMutex.RLock()
	defer fake.transfersMutex.RUnlock()
	return len(fake.transfersArgsForCall)
}

func (fake *FakeTransferResultsRegistry) TransfersReturns(result1 []api.TransferResults) {
	fake.TransfersStub = nil
	fake.transfersReturns = struct {
		result1 []api.TransferResults
	}{result1}
}

func (fake *FakeTransferResultsRegistry) TransfersByIP(arg1 net.IP) []api.TransferResults {
	fake.transfersByIPMutex.Lock()
	fake.transfersByIPArgsForCall = append(fake.transfersByIPArgsForCall, struct {
		arg1 net.IP
	}{arg1})
	fake.transfersByIPMutex.Unlock()
	if fake.TransfersByIPStub != nil {
		return fake.TransfersByIPStub(arg1)
	} else {
		return fake.transfersByIPReturns.result1
	}
}

func (fake *FakeTransferResultsRegistry) TransfersByIPCallCount() int {
	fake.transfersByIPMutex.RLock()
	defer fake.transfersByIPMutex.RUnlock()
	return len(fake.transfersByIPArgsForCall)
}

func (fake *FakeTransferResultsRegistry) TransfersByIPArgsForCall(i int) net.IP {
	fake.transfersByIPMutex.RLock()
	defer fake.transfersByIPMutex.RUnlock()
	return fake.transfersByIPArgsForCall[i].arg1
}

func (fake *FakeTransferResultsRegistry) TransfersByIPReturns(result1 []api.TransferResults) {
	fake.TransfersByIPStub = nil
	fake.transfersByIPReturns = struct {
		result1 []api.TransferResults
	}{result1}
}

var _ api.TransferResultsRegistry = new(FakeTransferResultsRegistry)
